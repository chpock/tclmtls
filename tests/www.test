# Copyright (c) 2024 Konstantin Kushnir <chpock@gmail.com>
#
# See the file "license.terms" for information on usage and redistribution
# of this file, and for a DISCLAIMER OF ALL WARRANTIES.

if {[lsearch [namespace children] ::tcltest] == -1} {
    package require tcltest
    namespace import ::tcltest::*
}

package require mtls
package require http

#::mtls::debug trace trace

::http::register https 443 ::mtls::socket

source [file join [testsDirectory] helper.tcl]

set results [dict create {*}{
    * {
        mtls-www-1.1 { ok {HTTP/1.1 301 Moved Permanently:} }
        mtls-www-1.2 { ok {HTTP/1.1 200 OK:Google} }
        mtls-www-1.3 { ok {HTTP/1.1 200 OK:Example Domain} }
        mtls-www-1.4 { ok {HTTP/1.1 200 OK:How's My SSL?} }
    }
}]

{*}[test_request mtls-www-1.1 google.com]
{*}[test_request mtls-www-1.2 www.google.com]
{*}[test_request mtls-www-1.3 example.com]
{*}[test_request mtls-www-1.4 www.howsmyssl.com]

test mtls-www-2.1 { Server initiated data transfer on synchronous socket } -constraints client -body {
    set s [mtls::socket irc.libera.chat 6697]
    catch { gets $s } result
    set result
} -match glob -result {*NOTICE*Checking Ident*} -cleanup {
    catch { close $s }
    unset -nocomplain s
}

test mtls-www-2.2 { Server initiated data transfer on asynchronous socket } -constraints client -setup {
    proc reader { sock } {
        catch { gets $sock } ::x
        fileevent $sock writable {}
    }
} -body {
    set s [mtls::socket -async irc.libera.chat 6697]
    set timer [after 2000 [list set ::x timeout]]
    fileevent $s writable [list reader $s]
    vwait x
    after cancel $timer
    set x
} -match glob -result {*NOTICE*Checking Ident*} -cleanup {
    catch { close $s }
    unset -nocomplain s timer x
    rename reader {}
}

# cleanup
cleanupTests
return
